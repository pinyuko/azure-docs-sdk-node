### YamlMime:TSType
name: StorageAccounts
uid: '@azure/arm-storage.StorageAccounts'
package: '@azure/arm-storage'
summary: Interface representing a StorageAccounts.
fullName: StorageAccounts
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginAbortHierarchicalNamespaceMigration(string, string,
      StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams)
    uid: >-
      @azure/arm-storage.StorageAccounts.beginAbortHierarchicalNamespaceMigration
    package: '@azure/arm-storage'
    summary: Abort live Migration of storage account to enable Hns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAbortHierarchicalNamespaceMigration(resourceGroupName:
        string, accountName: string, options?:
        StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginAbortHierarchicalNamespaceMigrationAndWait(string, string,
      StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams)
    uid: >-
      @azure/arm-storage.StorageAccounts.beginAbortHierarchicalNamespaceMigrationAndWait
    package: '@azure/arm-storage'
    summary: Abort live Migration of storage account to enable Hns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        beginAbortHierarchicalNamespaceMigrationAndWait(resourceGroupName:
        string, accountName: string, options?:
        StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginCreate(string, string, StorageAccountCreateParameters,
      StorageAccountsCreateOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginCreate'
    package: '@azure/arm-storage'
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters. If an account is already

      created and a subsequent create request is issued with different
      properties, the account properties

      will be updated. If an account is already created and a subsequent create
      or update request is

      issued with the exact same set of properties, the request will succeed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        parameters: StorageAccountCreateParameters, options?:
        StorageAccountsCreateOptionalParams):
        Promise<PollerLike<PollOperationState<StorageAccountsCreateResponse>,
        StorageAccountsCreateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.StorageAccountCreateParameters" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-storage.StorageAccountsCreateResponse" />&gt;, <xref
          uid="@azure/arm-storage.StorageAccountsCreateResponse" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, StorageAccountCreateParameters,
      StorageAccountsCreateOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginCreateAndWait'
    package: '@azure/arm-storage'
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters. If an account is already

      created and a subsequent create request is issued with different
      properties, the account properties

      will be updated. If an account is already created and a subsequent create
      or update request is

      issued with the exact same set of properties, the request will succeed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, accountName:
        string, parameters: StorageAccountCreateParameters, options?:
        StorageAccountsCreateOptionalParams):
        Promise<StorageAccountsCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.StorageAccountCreateParameters" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsCreateResponse" />&gt;
  - name: 'beginFailover(string, string, StorageAccountsFailoverOptionalParams)'
    uid: '@azure/arm-storage.StorageAccounts.beginFailover'
    package: '@azure/arm-storage'
    summary: >-
      Failover request can be triggered for a storage account in case of
      availability issues. The failover

      occurs from the storage account's primary cluster to secondary cluster for
      RA-GRS accounts. The

      secondary cluster will become primary after failover.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailover(resourceGroupName: string, accountName: string,
        options?: StorageAccountsFailoverOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsFailoverOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginFailoverAndWait(string, string,
      StorageAccountsFailoverOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginFailoverAndWait'
    package: '@azure/arm-storage'
    summary: >-
      Failover request can be triggered for a storage account in case of
      availability issues. The failover

      occurs from the storage account's primary cluster to secondary cluster for
      RA-GRS accounts. The

      secondary cluster will become primary after failover.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailoverAndWait(resourceGroupName: string, accountName:
        string, options?: StorageAccountsFailoverOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsFailoverOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginHierarchicalNamespaceMigration(string, string, string,
      StorageAccountsHierarchicalNamespaceMigrationOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginHierarchicalNamespaceMigration'
    package: '@azure/arm-storage'
    summary: Live Migration of storage account to enable Hns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginHierarchicalNamespaceMigration(resourceGroupName: string,
        accountName: string, requestType: string, options?:
        StorageAccountsHierarchicalNamespaceMigrationOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: requestType
          type: string
          description: >-
            Required. Hierarchical namespace migration type can either be a
            hierarchical
                               namespace validation request 'HnsOnValidationRequest' or a hydration request
                               'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration
                               request will migrate the account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsHierarchicalNamespaceMigrationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginHierarchicalNamespaceMigrationAndWait(string, string, string,
      StorageAccountsHierarchicalNamespaceMigrationOptionalParams)
    uid: >-
      @azure/arm-storage.StorageAccounts.beginHierarchicalNamespaceMigrationAndWait
    package: '@azure/arm-storage'
    summary: Live Migration of storage account to enable Hns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginHierarchicalNamespaceMigrationAndWait(resourceGroupName:
        string, accountName: string, requestType: string, options?:
        StorageAccountsHierarchicalNamespaceMigrationOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: requestType
          type: string
          description: >-
            Required. Hierarchical namespace migration type can either be a
            hierarchical
                               namespace validation request 'HnsOnValidationRequest' or a hydration request
                               'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration
                               request will migrate the account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsHierarchicalNamespaceMigrationOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRestoreBlobRanges(string, string, BlobRestoreParameters,
      StorageAccountsRestoreBlobRangesOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginRestoreBlobRanges'
    package: '@azure/arm-storage'
    summary: Restore blobs in the specified blob ranges
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreBlobRanges(resourceGroupName: string, accountName:
        string, parameters: BlobRestoreParameters, options?:
        StorageAccountsRestoreBlobRangesOptionalParams):
        Promise<PollerLike<PollOperationState<StorageAccountsRestoreBlobRangesResponse>,
        StorageAccountsRestoreBlobRangesResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.BlobRestoreParameters" />
          description: The parameters to provide for restore blob ranges.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsRestoreBlobRangesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-storage.StorageAccountsRestoreBlobRangesResponse"
          />&gt;, <xref
          uid="@azure/arm-storage.StorageAccountsRestoreBlobRangesResponse"
          />&gt;&gt;
  - name: >-
      beginRestoreBlobRangesAndWait(string, string, BlobRestoreParameters,
      StorageAccountsRestoreBlobRangesOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.beginRestoreBlobRangesAndWait'
    package: '@azure/arm-storage'
    summary: Restore blobs in the specified blob ranges
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreBlobRangesAndWait(resourceGroupName: string,
        accountName: string, parameters: BlobRestoreParameters, options?:
        StorageAccountsRestoreBlobRangesOptionalParams):
        Promise<StorageAccountsRestoreBlobRangesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.BlobRestoreParameters" />
          description: The parameters to provide for restore blob ranges.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsRestoreBlobRangesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsRestoreBlobRangesResponse"
          />&gt;
  - name: >-
      checkNameAvailability(StorageAccountCheckNameAvailabilityParameters,
      StorageAccountsCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.checkNameAvailability'
    package: '@azure/arm-storage'
    summary: Checks that the storage account name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(accountName:
        StorageAccountCheckNameAvailabilityParameters, options?:
        StorageAccountsCheckNameAvailabilityOptionalParams):
        Promise<StorageAccountsCheckNameAvailabilityResponse>
      parameters:
        - id: accountName
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountCheckNameAvailabilityParameters"
            />
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsCheckNameAvailabilityOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsCheckNameAvailabilityResponse"
          />&gt;
  - name: 'delete(string, string, StorageAccountsDeleteOptionalParams)'
    uid: '@azure/arm-storage.StorageAccounts.delete'
    package: '@azure/arm-storage'
    summary: Deletes a storage account in Microsoft Azure.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, accountName: string,
        options?: StorageAccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'getProperties(string, string, StorageAccountsGetPropertiesOptionalParams)'
    uid: '@azure/arm-storage.StorageAccounts.getProperties'
    package: '@azure/arm-storage'
    summary: >-
      Returns the properties for the specified storage account including but not
      limited to name, SKU

      name, location, and account status. The ListKeys operation should be used
      to retrieve storage keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(resourceGroupName: string, accountName: string,
        options?: StorageAccountsGetPropertiesOptionalParams):
        Promise<StorageAccountsGetPropertiesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsGetPropertiesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsGetPropertiesResponse" />&gt;
  - name: list(StorageAccountsListOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.list'
    package: '@azure/arm-storage'
    summary: >-
      Lists all the storage accounts available under the subscription. Note that
      storage keys are not

      returned; use the ListKeys operation for this.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: StorageAccountsListOptionalParams):
        PagedAsyncIterableIterator<StorageAccount>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-storage.StorageAccountsListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-storage.StorageAccount" />&gt;
  - name: >-
      listAccountSAS(string, string, AccountSasParameters,
      StorageAccountsListAccountSASOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.listAccountSAS'
    package: '@azure/arm-storage'
    summary: List SAS credentials of a storage account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAccountSAS(resourceGroupName: string, accountName: string,
        parameters: AccountSasParameters, options?:
        StorageAccountsListAccountSASOptionalParams):
        Promise<StorageAccountsListAccountSASResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.AccountSasParameters" />
          description: >-
            The parameters to provide to list SAS credentials for the storage
            account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsListAccountSASOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsListAccountSASResponse" />&gt;
  - name: >-
      listByResourceGroup(string,
      StorageAccountsListByResourceGroupOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.listByResourceGroup'
    package: '@azure/arm-storage'
    summary: >-
      Lists all the storage accounts available under the given resource group.
      Note that storage keys are

      not returned; use the ListKeys operation for this.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        StorageAccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<StorageAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsListByResourceGroupOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-storage.StorageAccount" />&gt;
  - name: 'listKeys(string, string, StorageAccountsListKeysOptionalParams)'
    uid: '@azure/arm-storage.StorageAccounts.listKeys'
    package: '@azure/arm-storage'
    summary: >-
      Lists the access keys or Kerberos keys (if active directory enabled) for
      the specified storage

      account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: StorageAccountsListKeysOptionalParams):
        Promise<StorageAccountsListKeysResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsListKeysOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsListKeysResponse" />&gt;
  - name: >-
      listServiceSAS(string, string, ServiceSasParameters,
      StorageAccountsListServiceSASOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.listServiceSAS'
    package: '@azure/arm-storage'
    summary: List service SAS credentials of a specific resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listServiceSAS(resourceGroupName: string, accountName: string,
        parameters: ServiceSasParameters, options?:
        StorageAccountsListServiceSASOptionalParams):
        Promise<StorageAccountsListServiceSASResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.ServiceSasParameters" />
          description: The parameters to provide to list service SAS credentials.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsListServiceSASOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsListServiceSASResponse" />&gt;
  - name: >-
      regenerateKey(string, string, StorageAccountRegenerateKeyParameters,
      StorageAccountsRegenerateKeyOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.regenerateKey'
    package: '@azure/arm-storage'
    summary: >-
      Regenerates one of the access keys or Kerberos keys for the specified
      storage account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        regenerateKey: StorageAccountRegenerateKeyParameters, options?:
        StorageAccountsRegenerateKeyOptionalParams):
        Promise<StorageAccountsRegenerateKeyResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: regenerateKey
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountRegenerateKeyParameters"
            />
          description: >-
            Specifies name of the key which should be regenerated -- key1, key2,
            kerb1,
                                 kerb2.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsRegenerateKeyOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsRegenerateKeyResponse" />&gt;
  - name: >-
      revokeUserDelegationKeys(string, string,
      StorageAccountsRevokeUserDelegationKeysOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys'
    package: '@azure/arm-storage'
    summary: Revoke user delegation keys.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function revokeUserDelegationKeys(resourceGroupName: string,
        accountName: string, options?:
        StorageAccountsRevokeUserDelegationKeysOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storage.StorageAccountsRevokeUserDelegationKeysOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      update(string, string, StorageAccountUpdateParameters,
      StorageAccountsUpdateOptionalParams)
    uid: '@azure/arm-storage.StorageAccounts.update'
    package: '@azure/arm-storage'
    summary: >-
      The update operation can be used to update the SKU, encryption, access
      tier, or tags for a storage

      account. It can also be used to map the account to a custom domain. Only
      one custom domain is

      supported per storage account; the replacement/change of custom domain is
      not supported. In order to

      replace an old custom domain, the old value must be cleared/unregistered
      before a new value can be

      set. The update of multiple properties is supported. This call does not
      change the storage keys for

      the account. If you want to change the storage account keys, use the
      regenerate keys operation. The

      location and name of the storage account cannot be changed after creation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: StorageAccountUpdateParameters, options?:
        StorageAccountsUpdateOptionalParams):
        Promise<StorageAccountsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: accountName
          type: string
          description: >-
            The name of the storage account within the specified resource group.
            Storage
                               account names must be between 3 and 24 characters in length and use numbers and lower-case letters
                               only.
        - id: parameters
          type: <xref uid="@azure/arm-storage.StorageAccountUpdateParameters" />
          description: The parameters to provide for the updated account.
        - id: options
          type: >-
            <xref uid="@azure/arm-storage.StorageAccountsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storage.StorageAccountsUpdateResponse" />&gt;
