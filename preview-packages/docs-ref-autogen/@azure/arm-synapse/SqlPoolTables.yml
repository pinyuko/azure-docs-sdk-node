### YamlMime:TSType
name: SqlPoolTables
uid: '@azure/arm-synapse.SqlPoolTables'
package: '@azure/arm-synapse'
summary: Interface representing a SqlPoolTables.
fullName: SqlPoolTables
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      get(string, string, string, string, string,
      SqlPoolTablesGetOptionalParams)
    uid: '@azure/arm-synapse.SqlPoolTables.get'
    package: '@azure/arm-synapse'
    summary: Get Sql pool table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, tableName: string, options?:
        SqlPoolTablesGetOptionalParams): Promise<SqlPoolTablesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: options
          type: <xref uid="@azure/arm-synapse.SqlPoolTablesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-synapse.SqlPoolTablesGetResponse"
          />&gt;
  - name: >-
      listBySchema(string, string, string, string,
      SqlPoolTablesListBySchemaOptionalParams)
    uid: '@azure/arm-synapse.SqlPoolTables.listBySchema'
    package: '@azure/arm-synapse'
    summary: Gets tables of a given schema in a SQL pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, schemaName: string, options?:
        SqlPoolTablesListBySchemaOptionalParams):
        PagedAsyncIterableIterator<SqlPoolTable>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: sqlPoolName
          type: string
          description: SQL pool name
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.SqlPoolTablesListBySchemaOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-synapse.SqlPoolTable" />&gt;
