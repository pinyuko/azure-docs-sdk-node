### YamlMime:TSType
name: IntegrationRuntimes
uid: '@azure/arm-synapse.IntegrationRuntimes'
package: '@azure/arm-synapse'
summary: Interface representing a IntegrationRuntimes.
fullName: IntegrationRuntimes
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, IntegrationRuntimeResource,
      IntegrationRuntimesCreateOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginCreate'
    package: '@azure/arm-synapse'
    summary: Create an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, integrationRuntime:
        IntegrationRuntimeResource, options?:
        IntegrationRuntimesCreateOptionalParams):
        Promise<PollerLike<PollOperationState<IntegrationRuntimesCreateResponse>,
        IntegrationRuntimesCreateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: integrationRuntime
          type: <xref uid="@azure/arm-synapse.IntegrationRuntimeResource" />
          description: Integration runtime resource definition.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesCreateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesCreateResponse" />&gt;,
          <xref uid="@azure/arm-synapse.IntegrationRuntimesCreateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, IntegrationRuntimeResource,
      IntegrationRuntimesCreateOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginCreateAndWait'
    package: '@azure/arm-synapse'
    summary: Create an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, workspaceName:
        string, integrationRuntimeName: string, integrationRuntime:
        IntegrationRuntimeResource, options?:
        IntegrationRuntimesCreateOptionalParams):
        Promise<IntegrationRuntimesCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: integrationRuntime
          type: <xref uid="@azure/arm-synapse.IntegrationRuntimeResource" />
          description: Integration runtime resource definition.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesCreateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesCreateResponse" />&gt;
  - name: >-
      beginDelete(string, string, string,
      IntegrationRuntimesDeleteOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginDelete'
    package: '@azure/arm-synapse'
    summary: Delete an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        IntegrationRuntimesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteAndWait(string, string, string,
      IntegrationRuntimesDeleteOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginDeleteAndWait'
    package: '@azure/arm-synapse'
    summary: Delete an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, workspaceName:
        string, integrationRuntimeName: string, options?:
        IntegrationRuntimesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDisableInteractiveQuery(string, string, string,
      IntegrationRuntimesDisableInteractiveQueryOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginDisableInteractiveQuery'
    package: '@azure/arm-synapse'
    summary: Disable interactive query in integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDisableInteractiveQuery(resourceGroupName: string,
        workspaceName: string, integrationRuntimeName: string, options?:
        IntegrationRuntimesDisableInteractiveQueryOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesDisableInteractiveQueryOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDisableInteractiveQueryAndWait(string, string, string,
      IntegrationRuntimesDisableInteractiveQueryOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginDisableInteractiveQueryAndWait'
    package: '@azure/arm-synapse'
    summary: Disable interactive query in integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDisableInteractiveQueryAndWait(resourceGroupName: string,
        workspaceName: string, integrationRuntimeName: string, options?:
        IntegrationRuntimesDisableInteractiveQueryOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesDisableInteractiveQueryOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginEnableInteractiveQuery(string, string, string,
      IntegrationRuntimesEnableInteractiveQueryOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginEnableInteractiveQuery'
    package: '@azure/arm-synapse'
    summary: Enable interactive query in integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginEnableInteractiveQuery(resourceGroupName: string,
        workspaceName: string, integrationRuntimeName: string, options?:
        IntegrationRuntimesEnableInteractiveQueryOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesEnableInteractiveQueryOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginEnableInteractiveQueryAndWait(string, string, string,
      IntegrationRuntimesEnableInteractiveQueryOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginEnableInteractiveQueryAndWait'
    package: '@azure/arm-synapse'
    summary: Enable interactive query in integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginEnableInteractiveQueryAndWait(resourceGroupName: string,
        workspaceName: string, integrationRuntimeName: string, options?:
        IntegrationRuntimesEnableInteractiveQueryOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesEnableInteractiveQueryOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginStart(string, string, string, IntegrationRuntimesStartOptionalParams)'
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginStart'
    package: '@azure/arm-synapse'
    summary: Start an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        IntegrationRuntimesStartOptionalParams):
        Promise<PollerLike<PollOperationState<IntegrationRuntimesStartResponse>,
        IntegrationRuntimesStartResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesStartOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesStartResponse" />&gt;,
          <xref uid="@azure/arm-synapse.IntegrationRuntimesStartResponse"
          />&gt;&gt;
  - name: >-
      beginStartAndWait(string, string, string,
      IntegrationRuntimesStartOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginStartAndWait'
    package: '@azure/arm-synapse'
    summary: Start an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, workspaceName:
        string, integrationRuntimeName: string, options?:
        IntegrationRuntimesStartOptionalParams):
        Promise<IntegrationRuntimesStartResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesStartOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesStartResponse" />&gt;
  - name: 'beginStop(string, string, string, IntegrationRuntimesStopOptionalParams)'
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginStop'
    package: '@azure/arm-synapse'
    summary: Stop an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        IntegrationRuntimesStopOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref uid="@azure/arm-synapse.IntegrationRuntimesStopOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginStopAndWait(string, string, string,
      IntegrationRuntimesStopOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.beginStopAndWait'
    package: '@azure/arm-synapse'
    summary: Stop an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, workspaceName:
        string, integrationRuntimeName: string, options?:
        IntegrationRuntimesStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref uid="@azure/arm-synapse.IntegrationRuntimesStopOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, IntegrationRuntimesGetOptionalParams)'
    uid: '@azure/arm-synapse.IntegrationRuntimes.get'
    package: '@azure/arm-synapse'
    summary: Get an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        IntegrationRuntimesGetOptionalParams):
        Promise<IntegrationRuntimesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref uid="@azure/arm-synapse.IntegrationRuntimesGetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesGetResponse" />&gt;
  - name: >-
      listByWorkspace(string, string,
      IntegrationRuntimesListByWorkspaceOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace'
    package: '@azure/arm-synapse'
    summary: List all integration runtimes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: IntegrationRuntimesListByWorkspaceOptionalParams):
        PagedAsyncIterableIterator<IntegrationRuntimeResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesListByWorkspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimeResource" />&gt;
  - name: >-
      listOutboundNetworkDependenciesEndpoints(string, string, string,
      IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams)
    uid: >-
      @azure/arm-synapse.IntegrationRuntimes.listOutboundNetworkDependenciesEndpoints
    package: '@azure/arm-synapse'
    summary: >-
      Gets the list of outbound network dependencies for a given Azure-SSIS
      integration runtime.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listOutboundNetworkDependenciesEndpoints(resourceGroupName:
        string, workspaceName: string, integrationRuntimeName: string, options?:
        IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams):
        Promise<IntegrationRuntimesListOutboundNetworkDependenciesEndpointsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesListOutboundNetworkDependenciesEndpointsResponse"
          />&gt;
  - name: >-
      update(string, string, string, UpdateIntegrationRuntimeRequest,
      IntegrationRuntimesUpdateOptionalParams)
    uid: '@azure/arm-synapse.IntegrationRuntimes.update'
    package: '@azure/arm-synapse'
    summary: Update an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, updateIntegrationRuntimeRequest:
        UpdateIntegrationRuntimeRequest, options?:
        IntegrationRuntimesUpdateOptionalParams):
        Promise<IntegrationRuntimesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: updateIntegrationRuntimeRequest
          type: <xref uid="@azure/arm-synapse.UpdateIntegrationRuntimeRequest" />
          description: The parameters for updating an integration runtime.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.IntegrationRuntimesUpdateResponse" />&gt;
  - name: 'upgrade(string, string, string, IntegrationRuntimesUpgradeOptionalParams)'
    uid: '@azure/arm-synapse.IntegrationRuntimes.upgrade'
    package: '@azure/arm-synapse'
    summary: Upgrade an integration runtime
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function upgrade(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        IntegrationRuntimesUpgradeOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: integrationRuntimeName
          type: string
          description: Integration runtime name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.IntegrationRuntimesUpgradeOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
