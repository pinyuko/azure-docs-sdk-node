### YamlMime:TSType
name: BigDataPools
uid: '@azure/arm-synapse.BigDataPools'
package: '@azure/arm-synapse'
summary: Interface representing a BigDataPools.
fullName: BigDataPools
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, BigDataPoolResourceInfo,
      BigDataPoolsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-synapse.BigDataPools.beginCreateOrUpdate'
    package: '@azure/arm-synapse'
    summary: Create a new Big Data pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, workspaceName:
        string, bigDataPoolName: string, bigDataPoolInfo:
        BigDataPoolResourceInfo, options?:
        BigDataPoolsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<BigDataPoolsCreateOrUpdateResponse>,
        BigDataPoolsCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: bigDataPoolInfo
          type: <xref uid="@azure/arm-synapse.BigDataPoolResourceInfo" />
          description: The Big Data pool to create.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.BigDataPoolsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-synapse.BigDataPoolsCreateOrUpdateResponse" />&gt;,
          <xref uid="@azure/arm-synapse.BigDataPoolsCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string,
      BigDataPoolResourceInfo, BigDataPoolsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-synapse.BigDataPools.beginCreateOrUpdateAndWait'
    package: '@azure/arm-synapse'
    summary: Create a new Big Data pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        workspaceName: string, bigDataPoolName: string, bigDataPoolInfo:
        BigDataPoolResourceInfo, options?:
        BigDataPoolsCreateOrUpdateOptionalParams):
        Promise<BigDataPoolsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: bigDataPoolInfo
          type: <xref uid="@azure/arm-synapse.BigDataPoolResourceInfo" />
          description: The Big Data pool to create.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.BigDataPoolsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-synapse.BigDataPoolsCreateOrUpdateResponse" />&gt;
  - name: 'beginDelete(string, string, string, BigDataPoolsDeleteOptionalParams)'
    uid: '@azure/arm-synapse.BigDataPools.beginDelete'
    package: '@azure/arm-synapse'
    summary: Delete a Big Data pool from the workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, options?: BigDataPoolsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<BigDataPoolsDeleteResponse>,
        BigDataPoolsDeleteResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: options
          type: <xref uid="@azure/arm-synapse.BigDataPoolsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-synapse.BigDataPoolsDeleteResponse" />&gt;, <xref
          uid="@azure/arm-synapse.BigDataPoolsDeleteResponse" />&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      BigDataPoolsDeleteOptionalParams)
    uid: '@azure/arm-synapse.BigDataPools.beginDeleteAndWait'
    package: '@azure/arm-synapse'
    summary: Delete a Big Data pool from the workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, workspaceName:
        string, bigDataPoolName: string, options?:
        BigDataPoolsDeleteOptionalParams): Promise<BigDataPoolsDeleteResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: options
          type: <xref uid="@azure/arm-synapse.BigDataPoolsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-synapse.BigDataPoolsDeleteResponse"
          />&gt;
  - name: 'get(string, string, string, BigDataPoolsGetOptionalParams)'
    uid: '@azure/arm-synapse.BigDataPools.get'
    package: '@azure/arm-synapse'
    summary: Get a Big Data pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, options?: BigDataPoolsGetOptionalParams):
        Promise<BigDataPoolsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: options
          type: <xref uid="@azure/arm-synapse.BigDataPoolsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-synapse.BigDataPoolsGetResponse"
          />&gt;
  - name: 'listByWorkspace(string, string, BigDataPoolsListByWorkspaceOptionalParams)'
    uid: '@azure/arm-synapse.BigDataPools.listByWorkspace'
    package: '@azure/arm-synapse'
    summary: List Big Data pools in a workspace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: BigDataPoolsListByWorkspaceOptionalParams):
        PagedAsyncIterableIterator<BigDataPoolResourceInfo>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-synapse.BigDataPoolsListByWorkspaceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-synapse.BigDataPoolResourceInfo" />&gt;
  - name: >-
      update(string, string, string, BigDataPoolPatchInfo,
      BigDataPoolsUpdateOptionalParams)
    uid: '@azure/arm-synapse.BigDataPools.update'
    package: '@azure/arm-synapse'
    summary: Patch a Big Data pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, bigDataPoolPatchInfo: BigDataPoolPatchInfo,
        options?: BigDataPoolsUpdateOptionalParams):
        Promise<BigDataPoolsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: bigDataPoolName
          type: string
          description: Big Data pool name
        - id: bigDataPoolPatchInfo
          type: <xref uid="@azure/arm-synapse.BigDataPoolPatchInfo" />
          description: The updated Big Data pool properties
        - id: options
          type: <xref uid="@azure/arm-synapse.BigDataPoolsUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-synapse.BigDataPoolsUpdateResponse"
          />&gt;
