### YamlMime:TSType
name: Images
uid: '@azure/arm-compute.Images'
package: '@azure/arm-compute'
summary: Interface representing a Images.
fullName: Images
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Image_2,
      ImagesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.Images.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: Create or update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image_2, options?:
        ImagesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ImagesCreateOrUpdateResponse>,
        ImagesCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.Image_2" />
          description: Parameters supplied to the Create Image operation.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-compute.ImagesCreateOrUpdateResponse" />&gt;, <xref
          uid="@azure/arm-compute.ImagesCreateOrUpdateResponse" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Image_2,
      ImagesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.Images.beginCreateOrUpdateAndWait'
    package: '@azure/arm-compute'
    summary: Create or update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        imageName: string, parameters: Image_2, options?:
        ImagesCreateOrUpdateOptionalParams):
        Promise<ImagesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.Image_2" />
          description: Parameters supplied to the Create Image operation.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-compute.ImagesCreateOrUpdateResponse"
          />&gt;
  - name: 'beginDelete(string, string, ImagesDeleteOptionalParams)'
    uid: '@azure/arm-compute.Images.beginDelete'
    package: '@azure/arm-compute'
    summary: Deletes an Image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, imageName: string,
        options?: ImagesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginDeleteAndWait(string, string, ImagesDeleteOptionalParams)'
    uid: '@azure/arm-compute.Images.beginDeleteAndWait'
    package: '@azure/arm-compute'
    summary: Deletes an Image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, imageName:
        string, options?: ImagesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginUpdate(string, string, ImageUpdate, ImagesUpdateOptionalParams)'
    uid: '@azure/arm-compute.Images.beginUpdate'
    package: '@azure/arm-compute'
    summary: Update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: ImagesUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ImagesUpdateResponse>,
        ImagesUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.ImageUpdate" />
          description: Parameters supplied to the Update Image operation.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-compute.ImagesUpdateResponse" />&gt;, <xref
          uid="@azure/arm-compute.ImagesUpdateResponse" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ImageUpdate,
      ImagesUpdateOptionalParams)
    uid: '@azure/arm-compute.Images.beginUpdateAndWait'
    package: '@azure/arm-compute'
    summary: Update an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, imageName:
        string, parameters: ImageUpdate, options?: ImagesUpdateOptionalParams):
        Promise<ImagesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: parameters
          type: <xref uid="@azure/arm-compute.ImageUpdate" />
          description: Parameters supplied to the Update Image operation.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.ImagesUpdateResponse" />&gt;
  - name: 'get(string, string, ImagesGetOptionalParams)'
    uid: '@azure/arm-compute.Images.get'
    package: '@azure/arm-compute'
    summary: Gets an image.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options?:
        ImagesGetOptionalParams): Promise<ImagesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: imageName
          type: string
          description: The name of the image.
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.ImagesGetResponse" />&gt;
  - name: list(ImagesListOptionalParams)
    uid: '@azure/arm-compute.Images.list'
    package: '@azure/arm-compute'
    summary: >-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next

      page of Images. Do this till nextLink is null to fetch all the Images.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ImagesListOptionalParams):
        PagedAsyncIterableIterator<Image_2>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-compute.ImagesListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-compute.Image_2"
          />&gt;
  - name: 'listByResourceGroup(string, ImagesListByResourceGroupOptionalParams)'
    uid: '@azure/arm-compute.Images.listByResourceGroup'
    package: '@azure/arm-compute'
    summary: Gets the list of images under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ImagesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Image_2>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.ImagesListByResourceGroupOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-compute.Image_2"
          />&gt;
