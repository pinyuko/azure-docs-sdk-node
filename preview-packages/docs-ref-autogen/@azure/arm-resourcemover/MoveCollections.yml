### YamlMime:TSType
name: MoveCollections
uid: '@azure/arm-resourcemover.MoveCollections'
package: '@azure/arm-resourcemover'
summary: Interface representing a MoveCollections.
fullName: MoveCollections
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'beginBulkRemove(string, string, MoveCollectionsBulkRemoveOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginBulkRemove'
    package: '@azure/arm-resourcemover'
    summary: >-
      Removes the set of move resources included in the request body from move
      collection. The

      orchestration is done by service. To aid the user to prerequisite the
      operation the client can call

      operation with validateOnly property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginBulkRemove(resourceGroupName: string, moveCollectionName:
        string, options?: MoveCollectionsBulkRemoveOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsBulkRemoveResponse>,
        MoveCollectionsBulkRemoveResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: moveCollectionName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsBulkRemoveOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsBulkRemoveResponse"
          />&gt;, <xref
          uid="@azure/arm-resourcemover.MoveCollectionsBulkRemoveResponse"
          />&gt;&gt;
  - name: >-
      beginBulkRemoveAndWait(string, string,
      MoveCollectionsBulkRemoveOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.beginBulkRemoveAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Removes the set of move resources included in the request body from move
      collection. The

      orchestration is done by service. To aid the user to prerequisite the
      operation the client can call

      operation with validateOnly property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginBulkRemoveAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsBulkRemoveOptionalParams):
        Promise<MoveCollectionsBulkRemoveResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: moveCollectionName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsBulkRemoveOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsBulkRemoveResponse"
          />&gt;
  - name: 'beginCommit(string, string, MoveCollectionsCommitOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginCommit'
    package: '@azure/arm-resourcemover'
    summary: >-
      Commits the set of resources included in the request body. The commit
      operation is triggered on the

      moveResources in the moveState 'CommitPending' or 'CommitFailed', on a
      successful completion the

      moveResource moveState do a transition to Committed. To aid the user to
      prerequisite the operation

      the client can call operation with validateOnly property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCommit(resourceGroupName: string, moveCollectionName:
        string, options?: MoveCollectionsCommitOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsCommitResponse>,
        MoveCollectionsCommitResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsCommitOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsCommitResponse" />&gt;,
          <xref uid="@azure/arm-resourcemover.MoveCollectionsCommitResponse"
          />&gt;&gt;
  - name: 'beginCommitAndWait(string, string, MoveCollectionsCommitOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginCommitAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Commits the set of resources included in the request body. The commit
      operation is triggered on the

      moveResources in the moveState 'CommitPending' or 'CommitFailed', on a
      successful completion the

      moveResource moveState do a transition to Committed. To aid the user to
      prerequisite the operation

      the client can call operation with validateOnly property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCommitAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsCommitOptionalParams):
        Promise<MoveCollectionsCommitResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsCommitOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsCommitResponse" />&gt;
  - name: 'beginDelete(string, string, MoveCollectionsDeleteOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginDelete'
    package: '@azure/arm-resourcemover'
    summary: Deletes a move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, moveCollectionName:
        string, options?: MoveCollectionsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsDeleteResponse>,
        MoveCollectionsDeleteResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsDeleteResponse" />&gt;,
          <xref uid="@azure/arm-resourcemover.MoveCollectionsDeleteResponse"
          />&gt;&gt;
  - name: 'beginDeleteAndWait(string, string, MoveCollectionsDeleteOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginDeleteAndWait'
    package: '@azure/arm-resourcemover'
    summary: Deletes a move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsDeleteOptionalParams):
        Promise<MoveCollectionsDeleteResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsDeleteResponse" />&gt;
  - name: 'beginDiscard(string, string, MoveCollectionsDiscardOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginDiscard'
    package: '@azure/arm-resourcemover'
    summary: >-
      Discards the set of resources included in the request body. The discard
      operation is triggered on

      the moveResources in the moveState 'CommitPending' or 'DiscardFailed', on
      a successful completion

      the moveResource moveState do a transition to MovePending. To aid the user
      to prerequisite the

      operation the client can call operation with validateOnly property set to
      true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDiscard(resourceGroupName: string, moveCollectionName:
        string, options?: MoveCollectionsDiscardOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsDiscardResponse>,
        MoveCollectionsDiscardResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsDiscardOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsDiscardResponse" />&gt;,
          <xref uid="@azure/arm-resourcemover.MoveCollectionsDiscardResponse"
          />&gt;&gt;
  - name: 'beginDiscardAndWait(string, string, MoveCollectionsDiscardOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginDiscardAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Discards the set of resources included in the request body. The discard
      operation is triggered on

      the moveResources in the moveState 'CommitPending' or 'DiscardFailed', on
      a successful completion

      the moveResource moveState do a transition to MovePending. To aid the user
      to prerequisite the

      operation the client can call operation with validateOnly property set to
      true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDiscardAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsDiscardOptionalParams):
        Promise<MoveCollectionsDiscardResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsDiscardOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsDiscardResponse" />&gt;
  - name: >-
      beginInitiateMove(string, string,
      MoveCollectionsInitiateMoveOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.beginInitiateMove'
    package: '@azure/arm-resourcemover'
    summary: >-
      Moves the set of resources included in the request body. The move
      operation is triggered after the

      moveResources are in the moveState 'MovePending' or 'MoveFailed', on a
      successful completion the

      moveResource moveState do a transition to CommitPending. To aid the user
      to prerequisite the

      operation the client can call operation with validateOnly property set to
      true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginInitiateMove(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsInitiateMoveOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsInitiateMoveResponse>,
        MoveCollectionsInitiateMoveResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsInitiateMoveOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsInitiateMoveResponse"
          />&gt;, <xref
          uid="@azure/arm-resourcemover.MoveCollectionsInitiateMoveResponse"
          />&gt;&gt;
  - name: >-
      beginInitiateMoveAndWait(string, string,
      MoveCollectionsInitiateMoveOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.beginInitiateMoveAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Moves the set of resources included in the request body. The move
      operation is triggered after the

      moveResources are in the moveState 'MovePending' or 'MoveFailed', on a
      successful completion the

      moveResource moveState do a transition to CommitPending. To aid the user
      to prerequisite the

      operation the client can call operation with validateOnly property set to
      true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginInitiateMoveAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsInitiateMoveOptionalParams):
        Promise<MoveCollectionsInitiateMoveResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsInitiateMoveOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsInitiateMoveResponse"
          />&gt;
  - name: 'beginPrepare(string, string, MoveCollectionsPrepareOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginPrepare'
    package: '@azure/arm-resourcemover'
    summary: >-
      Initiates prepare for the set of resources included in the request body.
      The prepare operation is on

      the moveResources that are in the moveState 'PreparePending' or
      'PrepareFailed', on a successful

      completion the moveResource moveState do a transition to MovePending. To
      aid the user to

      prerequisite the operation the client can call operation with validateOnly
      property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPrepare(resourceGroupName: string, moveCollectionName:
        string, options?: MoveCollectionsPrepareOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsPrepareResponse>,
        MoveCollectionsPrepareResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsPrepareOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsPrepareResponse" />&gt;,
          <xref uid="@azure/arm-resourcemover.MoveCollectionsPrepareResponse"
          />&gt;&gt;
  - name: 'beginPrepareAndWait(string, string, MoveCollectionsPrepareOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.beginPrepareAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Initiates prepare for the set of resources included in the request body.
      The prepare operation is on

      the moveResources that are in the moveState 'PreparePending' or
      'PrepareFailed', on a successful

      completion the moveResource moveState do a transition to MovePending. To
      aid the user to

      prerequisite the operation the client can call operation with validateOnly
      property set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPrepareAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsPrepareOptionalParams):
        Promise<MoveCollectionsPrepareResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsPrepareOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsPrepareResponse" />&gt;
  - name: >-
      beginResolveDependencies(string, string,
      MoveCollectionsResolveDependenciesOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.beginResolveDependencies'
    package: '@azure/arm-resourcemover'
    summary: >-
      Computes, resolves and validate the dependencies of the moveResources in
      the move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResolveDependencies(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsResolveDependenciesOptionalParams):
        Promise<PollerLike<PollOperationState<MoveCollectionsResolveDependenciesResponse>,
        MoveCollectionsResolveDependenciesResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsResolveDependenciesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsResolveDependenciesResponse"
          />&gt;, <xref
          uid="@azure/arm-resourcemover.MoveCollectionsResolveDependenciesResponse"
          />&gt;&gt;
  - name: >-
      beginResolveDependenciesAndWait(string, string,
      MoveCollectionsResolveDependenciesOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.beginResolveDependenciesAndWait'
    package: '@azure/arm-resourcemover'
    summary: >-
      Computes, resolves and validate the dependencies of the moveResources in
      the move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResolveDependenciesAndWait(resourceGroupName: string,
        moveCollectionName: string, options?:
        MoveCollectionsResolveDependenciesOptionalParams):
        Promise<MoveCollectionsResolveDependenciesResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsResolveDependenciesOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsResolveDependenciesResponse"
          />&gt;
  - name: 'create(string, string, MoveCollectionsCreateOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.create'
    package: '@azure/arm-resourcemover'
    summary: Creates or updates a move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, moveCollectionName: string,
        options?: MoveCollectionsCreateOptionalParams):
        Promise<MoveCollectionsCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsCreateResponse" />&gt;
  - name: 'get(string, string, MoveCollectionsGetOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.get'
    package: '@azure/arm-resourcemover'
    summary: Gets the move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, moveCollectionName: string,
        options?: MoveCollectionsGetOptionalParams):
        Promise<MoveCollectionsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsGetResponse" />&gt;
  - name: >-
      listMoveCollectionsByResourceGroup(string,
      MoveCollectionsListMoveCollectionsByResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcemover.MoveCollections.listMoveCollectionsByResourceGroup
    package: '@azure/arm-resourcemover'
    summary: Get all the Move Collections in the resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMoveCollectionsByResourceGroup(resourceGroupName: string,
        options?:
        MoveCollectionsListMoveCollectionsByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<MoveCollection>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsListMoveCollectionsByResourceGroupOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollection" />&gt;
  - name: >-
      listMoveCollectionsBySubscription(MoveCollectionsListMoveCollectionsBySubscriptionOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.listMoveCollectionsBySubscription'
    package: '@azure/arm-resourcemover'
    summary: Get all the Move Collections in the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMoveCollectionsBySubscription(options?:
        MoveCollectionsListMoveCollectionsBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<MoveCollection>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsListMoveCollectionsBySubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollection" />&gt;
  - name: >-
      listRequiredFor(string, string, string,
      MoveCollectionsListRequiredForOptionalParams)
    uid: '@azure/arm-resourcemover.MoveCollections.listRequiredFor'
    package: '@azure/arm-resourcemover'
    summary: List of the move resources for which an arm resource is required for.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listRequiredFor(resourceGroupName: string, moveCollectionName:
        string, sourceId: string, options?:
        MoveCollectionsListRequiredForOptionalParams):
        Promise<MoveCollectionsListRequiredForResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: sourceId
          type: string
          description: The sourceId for which the api is invoked.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsListRequiredForOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsListRequiredForResponse"
          />&gt;
  - name: 'update(string, string, MoveCollectionsUpdateOptionalParams)'
    uid: '@azure/arm-resourcemover.MoveCollections.update'
    package: '@azure/arm-resourcemover'
    summary: Updates a move collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, moveCollectionName: string,
        options?: MoveCollectionsUpdateOptionalParams):
        Promise<MoveCollectionsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: moveCollectionName
          type: string
          description: The Move Collection Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcemover.MoveCollectionsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcemover.MoveCollectionsUpdateResponse" />&gt;
