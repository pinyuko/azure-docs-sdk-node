### YamlMime:TSType
name: Caches
uid: '@azure/arm-storagecache.Caches'
package: '@azure/arm-storagecache'
summary: Interface representing a Caches.
fullName: Caches
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'beginCreateOrUpdate(string, string, CachesCreateOrUpdateOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginCreateOrUpdate'
    package: '@azure/arm-storagecache'
    summary: Create or update a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, options?: CachesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<CachesCreateOrUpdateResponse>,
        CachesCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-storagecache.CachesCreateOrUpdateResponse" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string,
      CachesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginCreateOrUpdateAndWait'
    package: '@azure/arm-storagecache'
    summary: Create or update a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesCreateOrUpdateOptionalParams):
        Promise<CachesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesCreateOrUpdateResponse" />&gt;
  - name: 'beginDebugInfo(string, string, CachesDebugInfoOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginDebugInfo'
    package: '@azure/arm-storagecache'
    summary: Tells a Cache to write generate debug info for support to process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDebugInfo(resourceGroupName: string, cacheName: string,
        options?: CachesDebugInfoOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDebugInfoOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginDebugInfoAndWait(string, string, CachesDebugInfoOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginDebugInfoAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a Cache to write generate debug info for support to process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDebugInfoAndWait(resourceGroupName: string, cacheName:
        string, options?: CachesDebugInfoOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDebugInfoOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginDelete(string, string, CachesDeleteOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginDelete'
    package: '@azure/arm-storagecache'
    summary: Schedules a Cache for deletion.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, cacheName: string,
        options?: CachesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginDeleteAndWait(string, string, CachesDeleteOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginDeleteAndWait'
    package: '@azure/arm-storagecache'
    summary: Schedules a Cache for deletion.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, cacheName:
        string, options?: CachesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginFlush(string, string, CachesFlushOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginFlush'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a Cache to write all dirty data to the Storage Target(s). During the
      flush, clients will see

      errors returned until the flush is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(resourceGroupName: string, cacheName: string,
        options?: CachesFlushOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesFlushOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginFlushAndWait(string, string, CachesFlushOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginFlushAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a Cache to write all dirty data to the Storage Target(s). During the
      flush, clients will see

      errors returned until the flush is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesFlushOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesFlushOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginStart(string, string, CachesStartOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginStart'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state Cache to transition to Active state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, cacheName: string,
        options?: CachesStartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStartOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginStartAndWait(string, string, CachesStartOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginStartAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state Cache to transition to Active state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStartOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginStop(string, string, CachesStopOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginStop'
    package: '@azure/arm-storagecache'
    summary: Tells an Active Cache to transition to Stopped state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, cacheName: string,
        options?: CachesStopOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStopOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginStopAndWait(string, string, CachesStopOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginStopAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells an Active Cache to transition to Stopped state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStopOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginUpgradeFirmware(string, string, CachesUpgradeFirmwareOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.beginUpgradeFirmware'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a Cache's firmware if a new version is available. Otherwise, this
      operation has no effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeFirmware(resourceGroupName: string, cacheName:
        string, options?: CachesUpgradeFirmwareOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesUpgradeFirmwareOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginUpgradeFirmwareAndWait(string, string,
      CachesUpgradeFirmwareOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginUpgradeFirmwareAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a Cache's firmware if a new version is available. Otherwise, this
      operation has no effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeFirmwareAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesUpgradeFirmwareOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesUpgradeFirmwareOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, CachesGetOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.get'
    package: '@azure/arm-storagecache'
    summary: Returns a Cache.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string, options?:
        CachesGetOptionalParams): Promise<CachesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-storagecache.CachesGetResponse"
          />&gt;
  - name: list(CachesListOptionalParams)
    uid: '@azure/arm-storagecache.Caches.list'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: CachesListOptionalParams):
        PagedAsyncIterableIterator<Cache_2>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-storagecache.Cache_2" />&gt;
  - name: 'listByResourceGroup(string, CachesListByResourceGroupOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.listByResourceGroup'
    package: '@azure/arm-storagecache'
    summary: Returns all Caches the user has access to under a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        CachesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Cache_2>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesListByResourceGroupOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-storagecache.Cache_2" />&gt;
  - name: 'update(string, string, CachesUpdateOptionalParams)'
    uid: '@azure/arm-storagecache.Caches.update'
    package: '@azure/arm-storagecache'
    summary: Update a Cache instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, cacheName: string, options?:
        CachesUpdateOptionalParams): Promise<CachesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: Target resource group.
        - id: cacheName
          type: string
          description: >-
            Name of Cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-storagecache.CachesUpdateResponse"
          />&gt;
