### YamlMime:TSType
name: CosmosClientOptions
uid: '@azure/cosmos.CosmosClientOptions'
package: '@azure/cosmos'
summary: ''
fullName: CosmosClientOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: aadCredentials
    uid: '@azure/cosmos.CosmosClientOptions.aadCredentials'
    package: '@azure/cosmos'
    summary: >-
      AAD token from `@azure/identity`

      Obtain a credential object by creating an `@azure/identity` credential
      object

      We will then use your credential object and a scope URL (your cosmos db
      endpoint)

      to authenticate requests to Cosmos
    fullName: aadCredentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aadCredentials?: TokenCredential'
      return:
        description: ''
        type: TokenCredential
  - name: agent
    uid: '@azure/cosmos.CosmosClientOptions.agent'
    package: '@azure/cosmos'
    summary: >-
      An optional custom http(s) Agent to be used in NodeJS enironments

      Use an agent such as https://github.com/TooTallNate/node-proxy-agent if
      you need to connect to Cosmos via a proxy
    fullName: agent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'agent?: Agent'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.Agent" />
  - name: connectionPolicy
    uid: '@azure/cosmos.CosmosClientOptions.connectionPolicy'
    package: '@azure/cosmos'
    summary: >-
      An instance of <xref:@azure/cosmos.ConnectionPolicy> class.

      This parameter is optional and the default connectionPolicy will be used
      if omitted.
    fullName: connectionPolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectionPolicy?: ConnectionPolicy'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.ConnectionPolicy" />
  - name: consistencyLevel
    uid: '@azure/cosmos.CosmosClientOptions.consistencyLevel'
    package: '@azure/cosmos'
    summary: |-
      An optional parameter that represents the consistency level.
      It can take any value from <xref:@azure/cosmos.ConsistencyLevel>.
    fullName: consistencyLevel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'consistencyLevel?: Object'
      return:
        description: ''
        type: Object
  - name: defaultHeaders
    uid: '@azure/cosmos.CosmosClientOptions.defaultHeaders'
    package: '@azure/cosmos'
    summary: ''
    fullName: defaultHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultHeaders?: CosmosHeaders_2'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosHeaders_2" />
  - name: endpoint
    uid: '@azure/cosmos.CosmosClientOptions.endpoint'
    package: '@azure/cosmos'
    summary: The service endpoint to use to create the client.
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: key
    uid: '@azure/cosmos.CosmosClientOptions.key'
    package: '@azure/cosmos'
    summary: The account master or readonly key
    fullName: key
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key?: string'
      return:
        description: ''
        type: string
  - name: permissionFeed
    uid: '@azure/cosmos.CosmosClientOptions.permissionFeed'
    package: '@azure/cosmos'
    summary: 'An array of <xref:@azure/cosmos.Permission> objects.'
    fullName: permissionFeed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'permissionFeed?: PermissionDefinition[]'
      return:
        description: ''
        type: '<xref uid="@azure/cosmos.PermissionDefinition" />[]'
  - name: resourceTokens
    uid: '@azure/cosmos.CosmosClientOptions.resourceTokens'
    package: '@azure/cosmos'
    summary: |-
      An object that contains resources tokens.
      Keys for the object are resource Ids and values are the resource tokens.
    fullName: resourceTokens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resourceTokens?: [key: string]: string'
      return:
        description: ''
        type: '[key: string]\: string'
  - name: tokenProvider
    uid: '@azure/cosmos.CosmosClientOptions.tokenProvider'
    package: '@azure/cosmos'
    summary: >-
      A user supplied function for resolving header authorization tokens.

      Allows users to generating their own auth tokens, potentially using a
      separate service
    fullName: tokenProvider
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.TokenProvider" />
  - name: userAgentSuffix
    uid: '@azure/cosmos.CosmosClientOptions.userAgentSuffix'
    package: '@azure/cosmos'
    summary: A custom string to append to the default SDK user agent.
    fullName: userAgentSuffix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userAgentSuffix?: string'
      return:
        description: ''
        type: string
