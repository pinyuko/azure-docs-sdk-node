### YamlMime:TSType
name: UserDefinedFunctions
uid: '@azure/cosmos.UserDefinedFunctions'
package: '@azure/cosmos'
summary: >-
  Used to create, upsert, query, or read all User Defined Functions.


  See <xref:@azure/cosmos.UserDefinedFunction> to read, replace, or delete a
  given User Defined Function by id.
fullName: UserDefinedFunctions
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: container
    uid: '@azure/cosmos.UserDefinedFunctions.container'
    package: '@azure/cosmos'
    summary: ''
    fullName: container
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'container: Container'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.Container" />
methods:
  - name: 'create(UserDefinedFunctionDefinition, RequestOptions)'
    uid: '@azure/cosmos.UserDefinedFunctions.create'
    package: '@azure/cosmos'
    summary: >+
      Create a UserDefinedFunction.

      Azure Cosmos DB supports JavaScript UDFs which can be used inside queries,
      stored procedures and triggers.


      For additional details, refer to the server-side JavaScript API
      documentation.

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(body: UserDefinedFunctionDefinition, options?:
        RequestOptions): Promise<UserDefinedFunctionResponse>
      parameters:
        - id: body
          type: <xref uid="@azure/cosmos.UserDefinedFunctionDefinition" />
          description: ''
        - id: options
          type: <xref uid="@azure/cosmos.RequestOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/cosmos.UserDefinedFunctionResponse"
          />&gt;
  - name: 'query(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.UserDefinedFunctions.query'
    package: '@azure/cosmos'
    summary: Query all User Defined Functions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function query(query: SqlQuerySpec, options?: FeedOptions):
        QueryIterator<any>
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.SqlQuerySpec" />
          description: >
            Query configuration for the operation. See
            <xref:@azure/cosmos.SqlQuerySpec> for more info on how to configure
            a query.
        - id: options
          type: <xref uid="@azure/cosmos.FeedOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/cosmos.QueryIterator" />&lt;any&gt;
  - name: 'query<T>(SqlQuerySpec, FeedOptions)'
    uid: '@azure/cosmos.UserDefinedFunctions.query_1'
    package: '@azure/cosmos'
    summary: Query all User Defined Functions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function query<T>(query: SqlQuerySpec, options?: FeedOptions):
        QueryIterator<T>
      parameters:
        - id: query
          type: <xref uid="@azure/cosmos.SqlQuerySpec" />
          description: >
            Query configuration for the operation. See
            <xref:@azure/cosmos.SqlQuerySpec> for more info on how to configure
            a query.
        - id: options
          type: <xref uid="@azure/cosmos.FeedOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/cosmos.QueryIterator" />&lt;T&gt;
  - name: readAll(FeedOptions)
    uid: '@azure/cosmos.UserDefinedFunctions.readAll'
    package: '@azure/cosmos'
    summary: >+
      Read all User Defined Functions.


      **Example**


      Read all User Defined Functions to array.

      ```typescript

      const {body: udfList} = await
      container.userDefinedFunctions.readAll().fetchAll();

      ```

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readAll(options?: FeedOptions):
        QueryIterator<UserDefinedFunctionDefinition & Resource>
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.FeedOptions" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/cosmos.QueryIterator" />&lt;<xref
          uid="@azure/cosmos.UserDefinedFunctionDefinition" /> & <xref
          uid="@azure/cosmos.Resource" />&gt;
